
require-macros:
   earl-mocha ->
      describe, it, before, after
      before-each, after-each
      xdescribe, xit
      assert, asserts
      expect-error

require:
   ../src as qjs ->
      JavaScriptEvaluator
   quaint -> create



describe "JavaScriptEvaluator":

   before-each:
      @je = JavaScriptEvaluator{}

   it "evaluates simple expressions":
      assert @je.eval{"1 + 2 + 3"} === 6

   it "has access to global object":
      assert @je.eval{"parseFloat('6.7')"} === 6.7

   it "accepts custom context":
      je = JavaScriptEvaluator{{ziff = 777}}
      assert je.eval{"ziff - 7"} === 770


describe "quaint integration":

   before-each:
      @q = quaint.create{qjs}
      @q.setenv{"a", 555}

   it "simple expressions":
      assert @q.translate{"1 + 1 = {1 + 1}", .html} === "1 + 1 = 2"

   it "more complicated expressions":
      assert @q.translate{"{var a = 6 + 6; a}", .html} === "12"

   it "declare and use variables":
      assert @q.translate{"{var a = 6 + 6}Twelve is {a}", .html} === "Twelve is 12"

